{"version":3,"file":"fractals.cjs.js","sources":["../src/fractal.js"],"sourcesContent":["/** @module Fractal */\n\n/**\n * @typedef {number[]} FractalColor\n */\n\n/**\n * @typedef {FractalColor[][]} FractalFragment\n */\n\n/**\n * @typedef {Object} FractalIteration\n * @property {number} ratio\n * @property {number} countX\n * @property {number} countY\n */\n\n/**\n * @typedef {FractalIteration[]} FractalIteration\n */\n\n\n/** @type FractalColor */\nconst defaultColor = [255, 255, 255];\n\n/** @type FractalFragment */\nconst defaultFragment = [[defaultColor]];\n\n/** @class */\nexport default class Fractal {\n  /**\n   * @param {HTMLCanvasElement} selector\n   * @param {FractalFragment} fragment\n   * @param {FractalColor} bg\n   */\n  constructor(selector, fragment, bg = [0, 0, 0]) {\n    const canvas = selector instanceof HTMLCanvasElement\n      ? selector\n      : document.querySelector(selector);\n\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n\n    this.fragment = fragment || defaultFragment;\n\n    this.params = {\n      width: canvas.offsetWidth,\n      height: canvas.offsetHeight,\n      bg: bg\n    };\n\n    canvas.width = this.params.width;\n    canvas.height = this.params.height;\n\n    this.clear();\n  }\n\n  get bg() {\n    return this.params.bg;\n  }\n  set bg(bg) {\n    this.params.bg = bg;\n    this.clear();\n  }\n\n  get width() {\n    return this.params.width;\n  }\n  set width(width) {\n    this.params.width = width;\n    this.canvas.width = width;\n    this.clear();\n  }\n\n  get height() {\n    return this.params.height;\n  }\n  set height(height) {\n    this.params.height = height;\n    this.canvas.height = height;\n    this.clear();\n  }\n\n  /**\n   * Return image blob of fractal\n   * @param {string} type\n   * @returns {Promise<Blob>}\n   */\n  getBlob(type = 'image/png') {\n    return new Promise(callback => {\n      this.canvas.toBlob(callback, type);\n    });\n  }\n\n  /**\n   * Return rgba()\n   * @param {number|number[]} r\n   * @param {number} g\n   * @param {number} b\n   * @param {number} a\n   * @returns {string}\n   */\n  rgba(r, g, b, a) {\n    if (Array.isArray(r)) [r, g, b, a] = r;\n    return `rgba(${r || 0}, ${g || 0}, ${b || 0}, ${a || 1})`;\n  }\n\n  /**\n   * Stop and clear screen\n   */\n  clear() {\n    this.stop();\n\n    this.ctx.clearRect(0, 0, this.params.width, this.params.height);\n    this.ctx.fillStyle = this.rgba(this.params.bg);\n    this.ctx.fillRect(0, 0, this.params.width, this.params.height);\n  }\n\n  /**\n   * Stop drawing\n   */\n  stop() {\n    if (this._drawTO) clearTimeout(this._drawTO);\n    if (this._iterateTO) clearTimeout(this._iterateTO);\n  }\n\n  /**\n   * Start draw fractal\n   * @param {Function} callback\n   * @returns {HTMLCanvasElement}\n   */\n  draw(callback) {\n    const iterations = this._computeIterations();\n    this.fragment = this._normalizeFragment(this.fragment, iterations.length);\n\n    let count = iterations.length;\n\n    this.clear();\n\n    const call = (i = 0) => {\n      this._drawTO = setTimeout(() => {\n        this.iteration(0, iterations[i], () => {\n          count--;\n          if (iterations[i + 1]) call(i + 1);\n          if (count <= 0) callback(this.canvas);\n        });\n      }, 100);\n    };\n\n    call();\n  }\n\n  /**\n   * Draw iteration of fractal\n   * @param {number} i\n   * @param {FractalIteration} iteration\n   * @param {Function} callback\n   */\n  iteration(i = 0, iteration, callback) {\n    this._iterateTO = setTimeout(() => {\n      let j = 0;\n\n      while (j <= iteration.countY) {\n        this.figure(i, j, iteration.ratio);\n        j++;\n      }\n\n      i++;\n\n      if (i <= iteration.countX) {\n        return this.iteration(i, iteration, callback);\n      }\n\n      callback();\n    }, 0);\n  }\n\n  /**\n   * Draw one figure of fractal\n   * @param {number} iX\n   * @param {number} iY\n   * @param {number} ratio\n   */\n  figure(iX, iY, ratio) {\n    const height = this.fragment.length * ratio;\n\n    this.fragment.forEach((points, row) => {\n      const width = points.length * ratio;\n\n      points.forEach((point, col) => {\n        this.ctx.fillStyle = this.rgba(point);\n\n        this.ctx.fillRect(\n          iX * width + col * ratio,\n          iY * height + row * ratio,\n          ratio,\n          ratio\n        );\n      });\n    });\n  }\n\n  /**\n   * Computes iterations data for draw\n   * @returns {FractalIterations}\n   */\n  _computeIterations() {\n    const iterations = [];\n    let ratio = 1;\n    const figureWidth = this.fragment[0].length;\n    const figureHeight = this.fragment.length;\n\n    const addIteration = () => {\n      const countX = Math.floor(this.width / (ratio * figureWidth));\n      const countY = Math.floor(this.height / (ratio * figureHeight));\n\n      if (countX > 0 && countY > 0) {\n        iterations.push({ ratio, countX, countY});\n        ratio = ratio * 2;\n        addIteration();\n      } else {\n        return iterations;\n      }\n    };\n\n    addIteration();\n\n    return iterations;\n  }\n\n  /**\n   * Normalize fragment\n   * @param {FractalFragment} fragment\n   * @param {number} iterations\n   * @returns {FractalFragment}\n   */\n  _normalizeFragment(fragment, iterations = 1) {\n    const alpha = (1 / iterations).toFixed(2);\n\n    return fragment.map(row => {\n      return row.map(point => {\n        let color;\n\n        if (Array.isArray(point)) {\n          color = [...point.slice(0, 3)];\n        } else if (point) {\n          color = [255, 255, 255];\n        } else {\n          color = [0, 0, 0];\n        }\n\n        return [...color, alpha];\n      });\n    });\n  }\n}\n"],"names":[],"mappings":"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"}